name: Publish NPM Package to GitHub Packages

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]
  push:
    branches: [ main ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://npm.pkg.github.com'
        scope: '@liangk'
        
    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Install dependencies
      run: npm ci
      
    - name: Build library
      run: npm run build:lib
      
    - name: Update package version for PR
      if: github.event_name == 'pull_request'
      run: |
        cd dist/lite-form
        # Get current version from package.json
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        # Generate pre-release version with PR number
        PR_VERSION="${CURRENT_VERSION}-pr.${{ github.event.number }}.$(date +%Y%m%d%H%M%S)"
        # Update version in package.json
        npm version $PR_VERSION --no-git-tag-version
        echo "Generated version: $PR_VERSION"
        
    - name: Update package version for main branch
      if: github.ref == 'refs/heads/main'
      run: |
        cd dist/lite-form
        # Auto-increment patch version for main branch releases
        npm version patch --no-git-tag-version
        
    - name: Update package name with scope
      run: |
        cd dist/lite-form
        # Update package name to include GitHub scope
        node -e "
          const pkg = require('./package.json');
          pkg.name = '@liangk/lite-form';
          require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2));
        "
        
    - name: Publish to GitHub Packages
      run: |
        cd dist/lite-form
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create release tag (main branch only)
      if: github.ref == 'refs/heads/main'
      run: |
        cd dist/lite-form
        VERSION=$(node -p "require('./package.json').version")
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v$VERSION" -m "Release version $VERSION"
        git push origin "v$VERSION"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Comment on PR with package info
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const packageJson = JSON.parse(fs.readFileSync('dist/lite-form/package.json', 'utf8'));
          const packageName = packageJson.name;
          const packageVersion = packageJson.version;
          
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `üöÄ **NPM Package Published Successfully!**\n\n` +
                  `üì¶ **Package:** \`${packageName}\`\n` +
                  `üè∑Ô∏è **Version:** \`${packageVersion}\`\n` +
                  `üì• **Installation:**\n\`\`\`bash\nnpm install ${packageName}@${packageVersion}\n\`\`\`\n\n` +
                  `üîó **Registry:** [GitHub Packages](https://github.com/${context.repo.owner}/${context.repo.repo}/packages)`
          });
